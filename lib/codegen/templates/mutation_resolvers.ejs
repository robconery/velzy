  
      <%-name%>InsertOne: async (_, args, context) => {
        const res = await db.collection("<%-collection%>").insertOne(args);
        return res.ops ? res.ops[0] : null;
      },

      <%-name%>ReplaceOne: async (_, args, context) => {
        const res = await db.collection("<%-collection%>").replaceOne(args.filter, args.document);
        return {modified: res.modifiedCount};
      },

      <%-name%>UpdateOne: async (_, args, context) => {
        const setter = { $set: args.update}
        const res = await db.collection("<%-collection%>").updateOne(args.filter, setter);
        return {modified: res.modifiedCount};
      },

      <%-name%>UpdateMany: async (_, args, context) => {
        const setter = { $set: args.update}
        const res = await db.collection("<%-collection%>").updateMany(args.filter, setter);

        return {modified: res.modifiedCount};
      },

      <%-name%>DeleteOne: async (_, args, context) => {
        const res = await db.collection("<%-collection%>").deleteOne(args.filter);
        return {deleted: res.deletedCount};
      },

      <%-name%>DeleteMany: async (_, args, context) => {
        const res = await db.collection("<%-collection%>").deleteMany(args.filter);
        return {deleted: res.deletedCount};
      },